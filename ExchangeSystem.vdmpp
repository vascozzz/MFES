class ExchangeSystem

types

instance variables
	public orders : set of Order := {};
	public history : seq of Transaction := []; 
	
	inv forall o in set orders & o.fulfilled = false;
	--inv for t in seq history & t.fulfilled = true;

operations
	public ExchangeSystem: () ==> ExchangeSystem
	ExchangeSystem() == 
		return self;
		
	public insertOrder: Order ==> ()
	insertOrder(order) ==
		orders := orders union {order}
	pre order.fulfilled = false
	;-- post orders = orders~ union {order};
	
	public cancelOrder: Order ==> ()
	cancelOrder(order) == 
		orders := orders \ {order}
	post orders = orders \ {order};
	
	public matchOrder: Order ==> bool
		matchOrder(newOrder) ==
		(
			for all order in set orders do
			(
				if (newOrder <> order and
						newOrder.type <> order.type and
						newOrder.product = order.product and
						newOrder.minPrice <= order.maxPrice and
						order.minPrice <= newOrder.maxPrice)
			  then
				(
					order.setStatus(true);
					newOrder.setStatus(true);
					history := history^[new Transaction(order, newOrder)];
					orders := orders\{order, newOrder};
					return true;
				);
			);
			return false;
		);
		
	public getHistory : () ==> seq of Transaction
	getHistory() ==
		return history;
		
	public getLastTransaction : () ==> Transaction
	getLastTransaction() ==
		return history(len history);
		
end ExchangeSystem